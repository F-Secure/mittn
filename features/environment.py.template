# pylint: disable=E0602,E0102

'''Set up environment specific settings'''

from behave import *

def before_all(context):
    """Things to do before anything else"""

    ####
    # Common settings for more than one test type
    ####

    # Database URI. This needs to be in a syntax that SQLAlchemy
    # understands. Any database supported by SQLAlchemy will do.
    # See http://docs.sqlalchemy.org/en/rel_0_9/core/engines.html#database-urls

    # Example for sqlite (replace with your absolute path):
    context.dburl = 'sqlite:////path/to/database.sqlite'

    # Example for PostgreSQL, with a password and forced TLS.
    # Replace with your username, hostname and databasename.
    # db_password = os.environ['PGPASSWORD']  # Retrieve password from env var
    # context.dburl = 'postgresql+psycopg2://username:' + db_password + '@hostname/databasename?sslmode=require'   

    # The following is used as the proxy setting across tests
    # (Note that for headless scanning, the proxy address is a 
    # separate setting, later)
    context.proxy_address = None
    # If you actually have a proxy, use, for example:
    # context.proxy_address = "localhost:8080"

    ####
    # headless-scanner specific
    ####

    # Remember that in addition to configure the paths here, you need
    # to install the HeadlessScannerDriver.py Burp Extender plugin in
    # Burp Suite, and set its output to stdout. Refer to installation
    # instructions for details.

    # Burp suite JAR file absolute path
    burp_location = "/path/to/burpsuite.jar"

    # Burp Suite proxy address
    context.burp_proxy_address = "localhost:8080"

    # Command line to start Burp Suite
    # Usually you should not need to touch this.
    context.burp_cmdline = "java -jar -Xmx1g -Djava.awt.headless=true -XX:MaxPermSize=1G " + burp_location

    # An alternate that shows GUI, perhaps helpful for debugging Burp
    # issues (note: startup is much, much slower)
    # context.burp_cmdline = "java -jar -Xmx1g -XX:MaxPermSize=1G " + burp_location

    ####
    # httpfuzzer specific
    ####

    # Radamsa binary absolute path
    context.radamsa_location = "/path/to/radamsa"

    ####
    # tlschecker specific
    ####

    # sslyze absolute path
    context.sslyze_location = "/path/to/sslyze"
